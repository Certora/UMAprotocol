--- ../../contracts/optimistic-asserter/implementation/OptimisticAsserter.sol	2023-01-22 12:29:39.864755600 +0200
+++ 	2023-01-22 12:42:33.493700900 +0200
@@ -4,20 +4,20 @@
 import "@openzeppelin/contracts/access/Ownable.sol";
 import "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol";
 
-import "../interfaces/OptimisticAsserterCallbackRecipientInterface.sol";
-import "../interfaces/OptimisticAsserterInterface.sol";
-import "../interfaces/EscalationManagerInterface.sol";
+import "../../../contracts/optimistic-asserter/interfaces/OptimisticAsserterCallbackRecipientInterface.sol";
+import "../../../contracts/optimistic-asserter/interfaces/OptimisticAsserterInterface.sol";
+import "../../../contracts/optimistic-asserter/interfaces/EscalationManagerInterface.sol";
 
-import "../../data-verification-mechanism/implementation/Constants.sol";
-import "../../data-verification-mechanism/interfaces/FinderInterface.sol";
-import "../../data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol";
-import "../../data-verification-mechanism/interfaces/OracleAncillaryInterface.sol";
-import "../../data-verification-mechanism/interfaces/StoreInterface.sol";
+import "../../../contracts/data-verification-mechanism/implementation/Constants.sol";
+import "../../../contracts/data-verification-mechanism/interfaces/FinderInterface.sol";
+import "../../../contracts/data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol";
+import "../../../contracts/data-verification-mechanism/interfaces/OracleAncillaryInterface.sol";
+import "../../../contracts/data-verification-mechanism/interfaces/StoreInterface.sol";
 
-import "../../common/implementation/AddressWhitelist.sol";
-import "../../common/implementation/AncillaryData.sol";
-import "../../common/implementation/Lockable.sol";
-import "../../common/implementation/MultiCaller.sol";
+import "../../../contracts/common/implementation/AddressWhitelist.sol";
+import "../../../contracts/common/implementation/AncillaryData.sol";
+import "../../../contracts/common/implementation/Lockable.sol";
+import "./MultiCaller.sol";
 
 /**
  * @title Optimistic Asserter.
--- ../../contracts/common/implementation/MultiCaller.sol	2023-01-02 11:33:57.828023600 +0200
+++ 	2023-01-22 11:59:32.428668900 +0200
@@ -8,6 +8,7 @@
 contract MultiCaller {
     function multicall(bytes[] calldata data) external returns (bytes[] memory results) {
         results = new bytes[](data.length);
+        /*
         for (uint256 i = 0; i < data.length; i++) {
             (bool success, bytes memory result) = address(this).delegatecall(data[i]);
 
@@ -22,5 +23,6 @@
 
             results[i] = result;
         }
+        */
     }
 }
